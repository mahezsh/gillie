{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc0b7bf07e79daf58d6": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "GillieVPC"
          }
        ]
      }
    },
    "subnet0fc7d38837fe8935f": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": "ap-southeast-2b",
        "VpcId": {
          "Ref": "vpc0b7bf07e79daf58d6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet 2"
          }
        ]
      }
    },
    "subnet02df6d112a1581d13": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.3.0/24",
        "AvailabilityZone": "ap-southeast-2a",
        "VpcId": {
          "Ref": "vpc0b7bf07e79daf58d6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private subnet 1"
          }
        ]
      }
    },
    "subnet0c4f1ffd94b1912fd": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.4.0/24",
        "AvailabilityZone": "ap-southeast-2b",
        "VpcId": {
          "Ref": "vpc0b7bf07e79daf58d6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private Subnet 2"
          }
        ]
      }
    },
    "subnet097e23118174fdd39": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "ap-southeast-2a",
        "VpcId": {
          "Ref": "vpc0b7bf07e79daf58d6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public subnet 1"
          }
        ]
      }
    },
    "igw0c973d1b4469d1a70": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "dopt22025445": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "ap-southeast-2.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "distd3fdfky3hoojcvcloudfrontnet": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Enabled": true,
          "PriceClass": "PriceClass_All",
          "DefaultCacheBehavior": {
            "TargetOriginId": "S3-s3gilliebucket",
            "ViewerProtocolPolicy": "allow-all",
            "MinTTL": 0,
            "AllowedMethods": [
              "HEAD",
              "GET"
            ],
            "CachedMethods": [
              "HEAD",
              "GET"
            ],
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              }
            }
          },
          "Origins": [
            {
              "DomainName": "s3gilliebucket.s3.amazonaws.com",
              "Id": "S3-s3gilliebucket",
              "S3OriginConfig": {
                "OriginAccessIdentity": "origin-access-identity/cloudfront/E1INZDGVO5EYEQ"
              }
            }
          ],
          "Restrictions": {
            "GeoRestriction": {
              "RestrictionType": "none",
              "Locations": [

              ]
            }
          },
          "ViewerCertificate": {
            "CloudFrontDefaultCertificate": "true",
            "MinimumProtocolVersion": "TLSv1"
          }
        }
      }
    },
    "distd720m4fxf0ke3cloudfrontnet": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Enabled": true,
          "PriceClass": "PriceClass_All",
          "DefaultCacheBehavior": {
            "TargetOriginId": "ELB-Assignement2ELB-397177311",
            "ViewerProtocolPolicy": "allow-all",
            "MinTTL": 0,
            "AllowedMethods": [
              "HEAD",
              "GET"
            ],
            "CachedMethods": [
              "HEAD",
              "GET"
            ],
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              }
            }
          },
          "Origins": [
            {
              "DomainName": "s3gilliebucket.s3.amazonaws.com",
              "Id": "S3-s3gilliebucket",
              "S3OriginConfig": {
              }
            },
            {
              "DomainName": "Assignement2ELB-397177311.ap-southeast-2.elb.amazonaws.com",
              "Id": "ELB-Assignement2ELB-397177311",
              "S3OriginConfig": {
                "HTTPPort": "80",
                "HTTPSPort": "443",
                "OriginProtocolPolicy": "http-only"
              }
            }
          ],
          "Restrictions": {
            "GeoRestriction": {
              "RestrictionType": "none",
              "Locations": [

              ]
            }
          },
          "ViewerCertificate": {
            "CloudFrontDefaultCertificate": "true",
            "MinimumProtocolVersion": "TLSv1"
          }
        }
      }
    },
    "asgAssignment2Autoscalinggroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          "ap-southeast-2b",
          "ap-southeast-2a"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "2",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "EC2",
        "MaxSize": "6",
        "MinSize": "2",
        "VPCZoneIdentifier": [
          {
            "Ref": "subnet02df6d112a1581d13"
          },
          {
            "Ref": "subnet0c4f1ffd94b1912fd"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "lcAssignment2Config"
        },
        "Tags": [
          {
            "Key": "Version",
            "Value": "v2",
            "PropagateAtLaunch": true
          },
          {
            "Key": "AppName",
            "Value": "Gillie",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupPendingInstances",
              "GroupMinSize",
              "GroupMaxSize",
              "GroupTerminatingInstances",
              "GroupTotalInstances",
              "GroupInServiceInstances",
              "GroupStandbyInstances",
              "GroupDesiredCapacity"
            ]
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "lcAssignment2Config": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-0b8733719990e81b0",
        "InstanceType": "t2.micro",
        "KeyName": "mykey",
        "InstanceMonitoring": "true",
        "SecurityGroups": [
          {
            "Ref": "sgwebtiersg2"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "SnapshotId": "snap-03868158756067239",
              "VolumeSize": 8
            }
          }
        ]
      }
    },
    "instancei0f350acfadbc5b8fd": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-062c04ec46aecd204",
        "InstanceType": "t2.nano",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "NAT"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet097e23118174fdd39"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.1.228",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              "sg-03baaa39f536c723a"
            ]
          }
        ]
      }
    },
    "instancei0ce088192e94857e2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile": "arn:aws:iam::028689708735:instance-profile/NewS3AlbumAccessPolicyRole",
        "ImageId": "ami-07cc15c3ba6f8e287",
        "InstanceType": "t2.micro",
        "KeyName": "mykey",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Web server 1"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0fc7d38837fe8935f"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.2.161",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgwebtiersg2"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "rdsdatabase1b": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "20",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.t2.micro",
        "Port": "3306",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "0",
        "MasterUsername": "master",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "16:00-16:30",
        "PreferredMaintenanceWindow": "tue:18:02-tue:18:32",
        "DBName": "MyDatabase",
        "Engine": "mysql",
        "EngineVersion": "5.7.22",
        "LicenseModel": "general-public-license",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetassignment1bdbsubnetgroup"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgdbtiersg2"
          }
        ]
      }
    },
    "s3assignment1bbucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "VersioningConfiguration": {
          "Status": "Suspended"
        }
      }
    },
    "dbsubnetassignment1bdbsubnetgroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "assignment1b-db-subnet-group",
        "SubnetIds": [
          {
            "Ref": "subnet0c4f1ffd94b1912fd"
          },
          {
            "Ref": "subnet02df6d112a1581d13"
          }
        ]
      }
    },
    "sgdbtiersg2": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "new SG2 for Assignment1B",
        "VpcId": {
          "Ref": "vpc0b7bf07e79daf58d6"
        }
      }
    },
    "sgelbsg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "News SG for assignment 2 ",
        "VpcId": {
          "Ref": "vpc0b7bf07e79daf58d6"
        }
      }
    },
    "sgwebtiersg2": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "new SG1 for Assignment1B",
        "VpcId": {
          "Ref": "vpc0b7bf07e79daf58d6"
        }
      }
    },
    "s3policyassignment1bbucket": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3assignment1bbucket"
        },
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "PolicyForCloudFrontPrivateContent",
          "Statement": [
            {
              "Sid": "1",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity E1INZDGVO5EYEQ"
              },
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "assignment-",
                    "1b-bucket/*"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "scalingScaleGroupSize": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyType": "TargetTrackingScaling",
        "StepAdjustments": [

        ],
        "AutoScalingGroupName": {
          "Ref": "asgAssignment2Autoscalinggroup"
        }
      }
    },
    "alarmTargetTrackingAss2AutoScalingGroupAlarmLowd9356c260b3a4deb8ad5174a258edfe5": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:ap-southeast-2:028689708735:scalingPolicy:686d7919-5ad8-4153-b334-a9d724e900e1:autoScalingGroupName/Ass2 Auto Scaling Group:policyName/Scale Group Size.",
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": "15",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "60",
        "Statistic": "Average",
        "Threshold": "42.0",
        "AlarmActions": [
          "arn:aws:autoscaling:ap-southeast-2:028689708735:scalingPolicy:686d7919-5ad8-4153-b334-a9d724e900e1:autoScalingGroupName/Ass2 Auto Scaling Group:policyName/Scale Group Size"
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": "Ass2 Auto Scaling Group"
          }
        ]
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0b7bf07e79daf58d6"
        },
        "InternetGatewayId": {
          "Ref": "igw0c973d1b4469d1a70"
        }
      }
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0b7bf07e79daf58d6"
        },
        "DhcpOptionsId": {
          "Ref": "dopt22025445"
        }
      }
    },
    "assoc1": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": "3.24.4.34",
        "InstanceId": {
          "Ref": "instancei0f350acfadbc5b8fd"
        }
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdbtiersg2"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgwebtiersg2"
        },
        "SourceSecurityGroupOwnerId": "028689708735"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdbtiersg2"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Ref": "sgwebtiersg2"
        },
        "SourceSecurityGroupOwnerId": "028689708735"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgelbsg"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwebtiersg2"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId": {
          "Ref": "sgelbsg"
        },
        "SourceSecurityGroupOwnerId": "028689708735"
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwebtiersg2"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgelbsg"
        },
        "SourceSecurityGroupOwnerId": "028689708735"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdbtiersg2"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgelbsg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwebtiersg2"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": ""
}
